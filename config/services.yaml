parameters:
    env(REDIS_HOST): 'localhost'
    env(REDIS_PORT): '6379'
    env(REDIS_PASSWORD): ''

services:
    _defaults:
        autowire: true
        autoconfigure: true

    App\:
        resource: '../src/*'
        exclude: '../src/{Api,Entity,Serializer,Migrations,Tests,Kernel.php}'

    App\Controller\:
        autowire: true
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    Redis:
        class: Redis
        calls:
            - [connect, ['%env(REDIS_HOST)%', '%env(REDIS_PORT)%']]
            - [auth, ['%env(REDIS_PASSWORD)%']]

    Doctrine\Common\Cache\RedisCache:
        calls:
            - [setRedis, ['@Redis']]

    app.serializer.normalizer.ship_files:
        class: App\Serializer\FileFieldsNormalizer
        decorates: 'api_platform.serializer.normalizer.item'
        arguments:
            $decorated: '@app.serializer.normalizer.ship_files.inner'
    app.jsonld.normalizer.ship_files:
        class: App\Serializer\FileFieldsNormalizer
        decorates: 'api_platform.jsonld.normalizer.item'
        arguments:
            $decorated: '@app.jsonld.normalizer.ship_files.inner'

    ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyNameCollectionFactory:
        arguments: ['@annotation_reader', null]
    api_platform.metadata.property.name_collection_factory: '@ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyNameCollectionFactory'

    Aws\S3\S3Client:
        arguments:
            -
                version: 'latest'
                region: '%env(AWS_S3_REGION)%'
                # TODO : remove credentials when on EC2 (instance profile used https://docs.aws.amazon.com/aws-sdk-php/v2/guide/credentials.html#using-iam-roles-for-amazon-ec2-instances)
                credentials:
                    key: '%env(AWS_ACCESS_ID)%'
                    secret: '%env(AWS_ACCESS_KEY)%'

    app.liip_imagine.cache.resolver.default.cache:
        class: Liip\ImagineBundle\Imagine\Cache\Resolver\CacheResolver
        decorates: 'liip_imagine.cache.resolver.default'
        arguments:
            $cache: '@Doctrine\Common\Cache\RedisCache'
            $cacheResolver: '@app.liip_imagine.cache.resolver.default.cache.inner'
    Liip\ImagineBundle\Service\FilterService: '@liip_imagine.service.filter'
